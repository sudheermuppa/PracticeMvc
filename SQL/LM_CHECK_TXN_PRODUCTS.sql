
---------- CHECK TRANSACTION PRODUCTS -----------
DECLARE
  IN_FILE_ID VARCHAR2(15) := :IN_FILE_ID;
  IN_PROG_NAME VARCHAR(100) := :IN_PROG_NAME;
  IN_PARTNER_NAME VARCHAR(100) := :IN_PARTNER_NAME;
  
  CURSOR C_PRODUCTS
  IS
      SELECT STG.ROW_ID, SBL.ACCNT_NAME, SBL.ACCNT_LOC, SBL.BU_NAME, STG.REC_STATUS, STG.PROD_NAME
      FROM SIEBEL.CX_FINT_TXN STG,
           (SELECT SIEBEL.S_PROD_INT.NAME PROD_NAME, SIEBEL.S_PGM_ORG_PROD.OFFER_TYPE_CD TXN_TYPE,
                   SIEBEL.S_ORG_EXT.NAME ACCNT_NAME, SIEBEL.S_ORG_EXT.LOC ACCNT_LOC, SIEBEL.S_BU.NAME BU_NAME, S_LOY_PROGRAM.NAME PROG_NAME
              FROM SIEBEL.S_PROD_INT,
                   SIEBEL.S_PGM_ORG_PROD,
                   SIEBEL.S_LOY_PROG_ORG,
                   SIEBEL.S_ORG_EXT,
                   SIEBEL.S_LOY_PROGRAM,
                   SIEBEL.S_BU
             WHERE SIEBEL.S_PGM_ORG_PROD.PRODUCT_ID = SIEBEL.S_PROD_INT.ROW_ID
               AND SIEBEL.S_PGM_ORG_PROD.PROG_PARTNER_ID = SIEBEL.S_LOY_PROG_ORG.ROW_ID
               AND SIEBEL.S_LOY_PROG_ORG.PROG_ID = SIEBEL.S_LOY_PROGRAM.ROW_ID
               AND SIEBEL.S_LOY_PROG_ORG.ORG_EXT_ID = SIEBEL.S_ORG_EXT.ROW_ID
               AND SIEBEL.S_ORG_EXT.BU_ID = SIEBEL.S_BU.ROW_ID ) SBL
     WHERE -- STG.MEM_ID IS NOT NULL
           FILE_ID = IN_FILE_ID
       AND STG.PROD_NAME = SBL.PROD_NAME (+)
       AND IN_PARTNER_NAME = SBL.ACCNT_NAME (+)
       AND IN_PROG_NAME = SBL.PROG_NAME (+)
       AND STG.REC_STATUS IN ( 'Prestaged', 'Queued' );

      N_COMMIT_INTERVAL NUMBER := 5000;
      N_COMMIT_COUNT NUMBER := 0;
BEGIN
  FOR REC IN C_PRODUCTS
  LOOP
    UPDATE SIEBEL.CX_FINT_TXN
       SET REC_STATUS = DECODE(REC.ACCNT_NAME, NULL, 'Error', REC_STATUS),
           ERROR_CODE = DECODE(REC.ACCNT_NAME, NULL, 'SBL-FINT-0006', ERROR_CODE),
           ERROR_DESC = DECODE(REC.ACCNT_NAME, NULL, LM_ERROR('SBL-FINT-0006', REC.PROD_NAME, IN_PARTNER_NAME), ERROR_DESC)
     WHERE ROW_ID = REC.ROW_ID;

     N_COMMIT_COUNT := N_COMMIT_COUNT + SQL%ROWCOUNT;
     IF N_COMMIT_COUNT = N_COMMIT_INTERVAL THEN
       COMMIT;
       N_COMMIT_COUNT := 0;
     END IF;
  END LOOP;
  COMMIT;
END;